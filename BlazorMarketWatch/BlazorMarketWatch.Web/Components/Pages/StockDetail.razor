@page "/StockDetail/{Symbol}/{TimeInterval}"
@inherits StockDetailBase

@if (Stock == null && ErrorMessage == null)
{
    <h1>Loading...</h1>
}
else if (ErrorMessage != null)
{
    <h1>@ErrorMessage</h1>
}
else 
{
    <MudContainer >
        <MudGrid>

            <MudItem sm="12">
                <MudCard Style="@($"background:rgba(39, 39, 47, 1)")">
                    <MudCardHeader>
                        <MudGrid>
                            <MudItem sm="6">
                                    <MudText Typo="Typo.h2">@Stock.meta.symbol</MudText>
                            </MudItem>
                                <MudItem md="6" Class="d-flex justify-end align-center py-0">
                                <AuthorizeView>
                                    <Authorized>
                                        <MudButton OnClick="(() => AddStock_Click(Stock.meta.symbol))" Class="my-6" Variant="Variant.Filled" Color="Color.Primary">+ Watch Stock</MudButton>
                                    </Authorized>
                                    <NotAuthorized>
                                        <MudButton OnClick="(() => LoggedOut_Click())" Class="my-6" Variant="Variant.Filled" Color="Color.Primary">+ Watch Stock</MudButton>
                                    </NotAuthorized>
                                </AuthorizeView>
                            </MudItem>
                        </MudGrid>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudChip Icon="@Icons.Material.Filled.AttachMoney" Variant="Variant.Outlined" Color="Color.Secondary"><MudText Typo="Typo.h5">@Stock.meta.currency</MudText></MudChip>
                        <MudChip Icon="@Icons.Material.Filled.AccessTime" Variant="Variant.Outlined" Color="Color.Secondary"><MudText Typo="Typo.h5">@Stock.meta.exchange_timezone</MudText></MudChip>
                        <MudChip Icon="@Icons.Material.Filled.CurrencyExchange" Variant="Variant.Outlined" Color="Color.Secondary"><MudText Typo="Typo.h5">@Stock.meta.exchange</MudText></MudChip>
                        <br />
                        <MudChip Icon="@Icons.Material.Filled.QrCode2" Variant="Variant.Outlined" Color="Color.Secondary"><MudText Typo="Typo.h5">@Stock.meta.mic_code</MudText></MudChip>
                        <MudChip Icon="@Icons.Material.Filled.Category" Variant="Variant.Outlined" Color="Color.Secondary"><MudText Typo="Typo.h5">@Stock.meta.type</MudText></MudChip>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem sm="12" Class="mb-3">
                <MudCard Style="@($"background:rgba(39, 39, 47, 1)")">
                    <MudCardHeader>
                        <MudGrid>
                            <MudItem sm="12" Class="d-flex justify-content-end">
                                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled" Size="Size.Large">
                                    <MudButton OnClick='(() => ChangeChart_Click(Stock.meta.symbol , "1day"))'><MudText Typo="Typo.h6">Daily</MudText></MudButton>
                                    <MudButton OnClick='(() => ChangeChart_Click(Stock.meta.symbol , "1week"))'><MudText Typo="Typo.h6">Weekly</MudText></MudButton>
                                    <MudButton OnClick='(() => ChangeChart_Click(Stock.meta.symbol , "1month"))'><MudText Typo="Typo.h6">Monthly</MudText></MudButton>
                                </MudButtonGroup>
                            </MudItem>
                            <MudItem sm="12">
                                @if (TimeInterval == "1day")
                                {
                                    <MudText Align="Align.Center" Typo="Typo.h2">Daily Close Price</MudText>
                                }
                                else if (TimeInterval == "1week")
                                {
                                    <MudText Align="Align.Center" Typo="Typo.h2">Weekly Close Price</MudText>
                                }
                                else
                                {
                                    <MudText Align="Align.Center" Typo="Typo.h2">Monthly Close Price</MudText>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudChart ChartType="ChartType.Line" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="450px" ChartOptions="@Options" />
                    </MudCardContent>
                    <MudCardContent>
                        <MudSimpleTable Bordered="true" FixedHeader="true" Style="height:300px">                          
                            <thead>
                                <tr>
                                    <th>Performance</th>
                                    <th>Date</th>
                                    <th>Open</th>
                                    <th>High</th>
                                    <th>Low</th>
                                    <th>Close</th>
                                    <th>Volume</th>
                                </tr>
                            </thead>                             
                            <tbody>
                                @for (var i = 0; i < 8; i++)
                                {
                                    <tr>
                                        @if (Convert.ToDouble(Stock.values[i].open) <= Convert.ToDouble(Stock.values[i].close))
                                        {
                                            <td><MudIcon Icon="@Icons.Material.Filled.ArrowUpward" Color="Color.Success" /></td>
                                        }
                                        else
                                        {
                                            <td><MudIcon Icon="@Icons.Material.Filled.ArrowDownward" Color="Color.Error" /></td>
                                        }
                                        <td>@Stock.values[i].datetime</td>
                                        <td>@Convert.ToDouble(Stock.values[i].open).ToString("C")</td>
                                        <td>@Convert.ToDouble(Stock.values[i].high).ToString("C")</td>
                                        <td>@Convert.ToDouble(Stock.values[i].low).ToString("C")</td>
                                        <td>@Convert.ToDouble(Stock.values[i].close).ToString("C")</td>
                                        <td>@Stock.values[i].volume</td>
                                    </tr>
                                }                               
                            </tbody>                                
                        </MudSimpleTable>
                    </MudCardContent>
                   
                </MudCard>
            </MudItem>

            
            
        </MudGrid>

        
    </MudContainer>
}