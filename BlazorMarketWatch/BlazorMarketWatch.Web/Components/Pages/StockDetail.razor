@page "/StockDetail/{Symbol}/{TimeInterval}"
@inherits StockDetailBase

@if (Stock == null && ErrorMessage == null)
{
    <h1>Loading...</h1>
}
else if (ErrorMessage != null)
{
    <h1>@ErrorMessage</h1>
}
else 
{
    <MudContainer >
        <MudGrid>
            <MudItem sm="12" Class="d-flex justify-end align-center">
                <AuthorizeView>
                    <Authorized>
                        <MudButton OnClick="(() => AddStock_Click(Stock.meta.symbol))" Class="my-6" Variant="Variant.Filled" Color="Color.Primary">Add stock to your watch!</MudButton>
                    </Authorized>
                    <NotAuthorized>
                        <MudButton OnClick="(() => LoggedOut_Click())" Class="my-6" Variant="Variant.Filled" Color="Color.Primary">Add stock to your watch!</MudButton>
                    </NotAuthorized>
                </AuthorizeView>
            </MudItem>
            <MudItem sm="6">
                <MudCard>
                    <MudCardHeader>
                        <MudText Typo="Typo.h3">@Stock.meta.symbol</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body1">Currency: @Stock.meta.currency</MudText>
                        <MudText Typo="Typo.body1">Exchange Timezone: @Stock.meta.exchange_timezone</MudText>
                        <MudText Typo="Typo.body1">Exchange: @Stock.meta.exchange</MudText>
                        <MudText Typo="Typo.body1">Mic code: @Stock.meta.mic_code</MudText>
                        <MudText Typo="Typo.body1">Type: @Stock.meta.type</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <MudItem sm="6">
                <MudCard>
                    <MudCardHeader>
                        <MudText Typo="Typo.h4">1 @TimeInterval[1..].ToUpper() Values:</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body1">Datetime: @Stock.values[0].datetime</MudText>
                        <MudText Typo="Typo.body1">Open: @Convert.ToDouble(Stock.values[0].open).ToString("C")</MudText>
                        <MudText Typo="Typo.body1">High: @Convert.ToDouble(Stock.values[0].high).ToString("C")</MudText>
                        <MudText Typo="Typo.body1">Low: @Convert.ToDouble(Stock.values[0].low).ToString("C")</MudText>
                        <MudText Typo="Typo.body1">Close: @Convert.ToDouble(Stock.values[0].close).ToString("C")</MudText>
                        <MudText Typo="Typo.body1">Volume: @Stock.values[1].volume</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>

        <MudText Typo="Typo.h3" Align="Align.Center" Class="my-10">@TimeInterval[1..].ToUpper() Chart: </MudText>

        <MudGrid Justify="Justify.Center">
            <MudItem sm="3" Class="d-flex justify-end align-center">
                <MudButtonGroup Color="Color.Primary" Variant="Variant.Text" VerticalAlign="true" Size="Size.Large">
                    <MudButton OnClick='(() => ChangeChart_Click(Stock.meta.symbol , "1day"))'>Daily</MudButton>
                    <MudButton OnClick='(() => ChangeChart_Click(Stock.meta.symbol , "1week"))'>Weekly</MudButton>
                    <MudButton OnClick='(() => ChangeChart_Click(Stock.meta.symbol , "1month"))'>Monthly</MudButton>
                </MudButtonGroup>
            </MudItem> 
            <MudItem sm="9">
                <MudChart ChartType="ChartType.Line" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="450px" ChartOptions="@Options" />
            </MudItem>
        </MudGrid>
        
    </MudContainer>
}